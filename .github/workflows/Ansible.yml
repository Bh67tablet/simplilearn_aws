name: Ansible

on:
  workflow_dispatch:
    inputs:
      name:
        default: apply
        type: choice
        description: deploy or destroy
        options: 
        - apply
        - destroy
      tf_dir:
        default: AnsibleS3
        type: choice
        description: deploy or destroy
        options: 
        - AnsibleS3
        - AnsibleIAM
        - AnsibleWorker
        - AnsibleMaster

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Code Checkout
      uses: actions/checkout@v3

    - name: Storing manifests in GitHub
      uses: actions/upload-artifact@v3
      with:
       name: terraformArtifacts
       path: ${{ github.event.inputs.tf_dir }}/*
        
  deploy: 
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Downloading manifests from GitHub
      uses: actions/download-artifact@v3
      with:
       name: terraformArtifacts

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
    
    - name: Validate AWS Credentials working or not
      run: |
        aws sts get-caller-identity
        
    - name: Execute terraform scripts
      if: ${{ github.event.inputs.tf_dir == 'AnsibleS3'}}
      run: |
        terraform init
        terraform ${{ github.event.inputs.name }} --auto-approve
        
    - name: Execute terraform scripts
      if: ${{ github.event.inputs.tf_dir == 'AnsibleIAM' }}
      run: |
        terraform init
        terraform ${{ github.event.inputs.name }} --auto-approve
        
    - name: Execute terraform scripts
      if: ${{ github.event.inputs.tf_dir == 'AnsibleWorker' }}
      run: |
        terraform init
        terraform ${{ github.event.inputs.name }} --auto-approve -var="subnet_id=${{ vars.SUBNET_ID }}

    - name: Execute terraform scripts
      if: ${{ github.event.inputs.tf_dir == 'AnsibleMaster' }}
      run: |
        terraform init
        terraform ${{ github.event.inputs.name }} --auto-approve -var="vpc_id=${{ vars.VPC_ID }}" -var="subnet_id=${{ vars.SUBNET_ID }}"

#terraform apply --auto-approve --auto-approve -var="vpc_id=${{ vars.VPC_ID }}" -var="subnet_id=${{ vars.SUBNET_ID }}"
    
